name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Install linters
        run: |
          go get golang.org/x/lint/golint
          go get github.com/golangci/golangci-lint/cmd/golangci-lint

      - name: Lint source code
        run: |
          golint -set_exit_status ./...
          golangci-lint run -c .golangci.toml

      - name: Run unit tests
        run: go test -coverprofile=coverage.out ./...

      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          file: coverage.out

      - name: Codacy
        run: |
          go install github.com/schrej/godacov
          godacov -r coverage.out -t ${{ secrets.CODACY_TOKEN }} -c ${{ github.sha }}

  # run:
  #   name: Run unit tests
  #   runs-on: macos-latest
  #   steps:

  #   - name: Set up Go 1.13
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: ^1.13
  #     id: go

  #   - name: Check out code into the Go module directory
  #     uses: actions/checkout@v2

  #   - name: Get dependencies
  #     run: |
  #       go get -v -t -d ./...

  #   - name: Install linters
  #     run: |
  #       go get golang.org/x/lint/golint
  #       go get github.com/golangci/golangci-lint/cmd/golangci-lint

  #   - name: Lint Go source code
  #     run: zsh run-tests.sh -vl

  #   - name: Install test dependencies
  #     run: go get github.com/mfridman/tparse

  #   - name: Run unit tests
  #     run: zsh run-tests.sh -ic ./...

  #   - name: Codecov
  #     uses: codecov/codecov-action@v1
  #     with:
  #       file: coverage.out

  #   - name: Codacy
  #     run: |
  #       go install github.com/schrej/godacov
  #       godacov -r coverage.out -t ${{ secrets.CODACY_TOKEN }} -c ${{ github.sha }}

  #   # - name: Coveralls
  #   #   uses: shogo82148/actions-goveralls@v1.2.4
  #   #   with:
  #   #     github-token: ${{ secrets.COVERALLS_REPO_TOKEN }}
  #   #     path-to-profile: coverage.out
  #   #     parallel: false

  #   - name: Coveralls
  #     env:
  #       COVERALLS_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  #     run: |
  #       go install github.com/mattn/goveralls
  #       goveralls -coverprofile coverage.out -service github

